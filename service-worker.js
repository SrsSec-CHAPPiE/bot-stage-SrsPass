if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let r=Promise.resolve();return s[e]||(r=new Promise((async r=>{if("document"in self){const s=document.createElement("script");s.src=e,document.head.appendChild(s),s.onload=r}else importScripts(e),r()}))),r.then((()=>{if(!s[e])throw new Error(`Module ${e} didnâ€™t register its module`);return s[e]}))},r=(r,s)=>{Promise.all(r.map(e)).then((e=>s(1===e.length?e[0]:e)))},s={require:Promise.resolve(r)};self.define=(r,n,t)=>{s[r]||(s[r]=Promise.resolve().then((()=>{let s={};const o={uri:location.origin+r.slice(1)};return Promise.all(n.map((r=>{switch(r){case"exports":return s;case"module":return o;default:return e(r)}}))).then((e=>{const r=t(...e);return s.default||(s.default=r),s}))})))}}define("./service-worker.js",["./workbox-dd0cd4d3"],(function(e){"use strict";self.skipWaiting(),e.clientsClaim(),e.precacheAndRoute([{url:"/argon2id.worker.js",revision:"0e3080f68de94ade475ab73ef9e0ce8687625110"}],{}),e.registerRoute(/\.png$/,new e.CacheFirst,"GET"),e.registerRoute("/",new e.StaleWhileRevalidate,"GET"),e.registerRoute("/bundle.js",new e.StaleWhileRevalidate,"GET"),e.registerRoute(/\.css$/,new e.StaleWhileRevalidate,"GET"),e.registerRoute(/\.js$/,new e.StaleWhileRevalidate,"GET")}));
